spring.application.name=hackathon_authservice
server.port=8100

logging.level.org.springframework=debug
logging.level.com.sadi.pinklifeline=debug

spring.cloud.gcp.secretmanager.enabled=false
spring.datasource.url=jdbc:mysql://${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.flyway.enabled=true
management.tracing.sampling.probability=1
#management.zipkin.tracing.endpoint=${ZIPKIN_HOST}/api/v2/spans
management.endpoints.web.exposure.include=prometheus

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sadatulislamsadi@gmail.com
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

#verification.email.message must have a %s to put the verification code.
verification.email.message=Your verification code is %s and will expire in %d minutes
verification.email.subject=Confirmation
verification.email.timeout=600
verification.email.redis.prefix=pinklifeline:users:

#JWT encode uses this infos to generate jwt token
auth.jwt.audiences=pinklifeline
auth.jwt.issuer=self
auth.jwt.timeout=86400
auth.jwt.cookie.name=access_token

cors.allowed-origins=${FRONTEND_HOST},${FRONTEND_HOST}/
